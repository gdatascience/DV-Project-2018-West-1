processed_cases %>%
mutate(mnth_yr = (Entry_Month+(Entry_Year*100))) %>%
group_by(mnth_yr) %>%
summarise(n = n()) %>%
ggplot(aes(x = mnth_yr)) +
geom_histogram()
processed_cases %>%
mutate(mnth_yr = (Entry_Month+(Entry_Year*100)))
processed_cases %>%
mutate(mnth_yr = (Entry_Month+(Entry_Year*100))) %>%
ggplot(aes(x = mnth_yr)) +
geom_histogram()
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
ggplot(aes(x = mnth_yr)) +
geom_histogram()
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
ggplot(aes(x = mnth_yr)) +
geom_col()
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
ggplot(aes(x = mnth_yr, y = n())) +
geom_col()
ggplot(aes(x = mnth_yr, y = n) +
summarise(n = n()) %>%
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
group_by(mnth_yr) %>%
summarise(n = n()) %>%
ggplot(aes(x = mnth_yr, y = n) +
geom_col()
)
)
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
group_by(mnth_yr) %>%
summarise(n = n()) %>%
ggplot(aes(x = mnth_yr, y = n)) +
geom_col()
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
arrange(mnth_yr)
group_by(mnth_yr) %>%
summarise(n = n()) %>%
ggplot(aes(x = mnth_yr, y = n)) +
geom_col()
processed_cases %>%
mutate(mnth_yr = as.factor((Entry_Month+(Entry_Year*100)))) %>%
arrange(mnth_yr) %>%
group_by(mnth_yr) %>%
summarise(n = n()) %>%
ggplot(aes(x = mnth_yr, y = n)) +
geom_col()
processed_cases = cm_Cases %>%
mutate(dt_entry = mdy(Entry_Date___Calc))
processed_cases = cm_Cases %>%
mutate(dt_entry = mdy(substr(Entry_Date___Calc, 1, 10)))
substr(cm_Cases$Entry_Date___Calc[1],1,10)
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)))
View(processed_cases)
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(Entry_Date___Calc)) # ymd(substr(Entry_Date___Calc, 1, 10)))
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)),
dt_close = ymd(substr(Close_Date___Calc, 1, 10)))
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)),
dt_close = ymd(substr(Close_Date___Calc, 1, 10)),
days_open = dt_close - dt_entry)
View(processed_cases)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram()
processed_cases %>%
ggplot(aes(x = dt_close, color = days_open)) +
geom_histogram()
processed_cases %>%
ggplot(aes(x = dt_close)) +
geom_histogram()
processed_cases %>%
group_by(dt_close) %>%
summarise(avg_days_open = mean(days_open)) %>%
ggplot(aes(x = dt_close, y = avg_days_open)) +
geom_line()
processed_cases %>%
ggplot(aes(x = dt_open)) +
geom_histogram()
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram()
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 1)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 7)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 30)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 90)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 30)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 7)
processed_cases %>%
ggplot(aes(x = dt_entry)) +
geom_histogram(binwidth = 30)
callLog = read.csv('311_Phone_Call_Log_Mod.csv', stringsAsFactors = FALSE)
View(callLog)
View(cm_Cases)
str(callLog)
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)),
dt_close = ymd(substr(Close_Date___Calc, 1, 10)),
days_open = dt_close - dt_entry) %>%
inner_join(callLog, by = 'FID')
View(processed_cases)
ce_Cases = read.csv('Code_Enforcement_Cases.csv', stringsAsFactors = FALSE)
View(ce_Cases)
View(cm_Cases)
View(callLog)
View(ce_Cases)
processed_cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)),
dt_close = ymd(substr(Close_Date___Calc, 1, 10)),
days_open = dt_close - dt_entry) %>%
inner_join(callLog, by = 'FID') %>%
inner_join(ce_Cases, by = 'FID')
View(processed_cases)
View(ce_Cases)
View(cm_Cases)
cm_Cases
cm_Cases %>% tbl_df()
View(ce_Cases)
processed_cm_Cases = cm_Cases %>%
mutate(dt_entry = ymd(substr(Entry_Date___Calc, 1, 10)),
dt_close = ymd(substr(Close_Date___Calc, 1, 10)),
days_open = dt_close - dt_entry)
View(processed_cases)
ce_Cases = read.csv('Code_Enforcement_Cases.csv', stringsAsFactors = FALSE)
create_report(cm_Cases)
cm_Cases = read.csv('311_Contact_Management_Cases.csv', stringsAsFactors = FALSE)
str(cm_Cases)
create_report(cm_Cases)
ce_Cases = read.csv('Code_Enforcement_Cases.csv', stringsAsFactors = FALSE)
ce_Cases = read.csv('Code_Enforcement_Cases.csv', stringsAsFactors = FALSE)
create_report(ce_Cases)
create_report(ce_Cases)
?create_report
create_report(ce_Cases, y = Case_Status_Code)
create_report(ce_Cases, y = 'Case_Status_Code')
str(ce_Cases)
register_google(key = "AIzaSyBIWfpnPiMELwt5Uif2s_AbdquY7krYit0")
pacman::p_load( skimr, DataExplorer, tidyverse, lubridate, ggmaps )
ce_Cases_geo = geocode(paste(ce_Cases$Street_Address,
ce_Cases$Zip_Code,
sep = " "),
output = "more")
# this chunk will safely install and load some packages this code requires
if (!require("pacman")) install.packages("pacman")
pacman::p_load( skimr, DataExplorer, tidyverse, lubridate, ggmaps )
theme_set(theme_light())
# this chunk will safely install and load some packages this code requires
if (!require("pacman")) install.packages("pacman")
pacman::p_load( skimr, DataExplorer, tidyverse, lubridate, ggmap )
theme_set(theme_light())
ce_Cases_geo = geocode(paste(ce_Cases$Street_Address,
ce_Cases$Zip_Code,
sep = " "),
output = "more")
ce_Cases_geo = geocode(paste(ce_Cases$Street_Address[1:10],
ce_Cases$Zip_Code[1:10],
sep = " "),
output = "more")
register_google(key = "AIzaSyBIWfpnPiMELwt5Uif2s_AbdquY7krYit0")
bl = read.csv("./BusinessLicences/Students/Galvan_Business_Licenses_10.csv")
register_google(key = "AIzaSyBIWfpnPiMELwt5Uif2s_AbdquY7krYit0")
ce_Cases_geo = geocode(paste(ce_Cases$Street_Address[1:10],
ce_Cases$Zip_Code[1:10],
sep = " "),
output = "more")
View(ce_Cases_geo)
plot(lon,lat)
plot(ce_Cases_geo$lat, ce_Cases_geo$lon)
districts = readOGR(dsn="City_Council_Districts", layer = "City_Council_Districts", stringsAsFactors = FALSE)
# this chunk will safely install and load some packages this code requires
if (!require("pacman")) install.packages("pacman")
pacman::p_load( skimr, DataExplorer, tidyverse, lubridate, ggmap, rgdal )
theme_set(theme_light())
districts = readOGR(dsn="City_Council_Districts",
layer = "City_Council_Districts",
stringsAsFactors = FALSE)
# (districts@polygons[[1]])
coordinates(districts[1])
plot(districts)
districts2 <- fortify(districts, region = 'Dist')
districts2  <- merge(districts2, districts@data, by.x = 'id', by.y = 'Dist')
ggplot() + geom_polygon(data = districts2, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
districts2 <- fortify(districts, region = 'Dist')
districts2  <- merge(districts2, districts@data, by.x = 'id', by.y = 'Dist')
ggplot(data = districts2) + geom_polygon(aes(x = long, y = lat, fill = id, group = group), color = "white") +
coord_fixed(1.3)
View(districts2)
census = readOGR(dsn="2010_CensusData",
layer = "2010_CensusData",
stringsAsFactors = FALSE)
summary(census)
plot(census)
census2 <- fortify(census, region = 'NAME')
census2  <- merge(census2, census@data, by.x = 'id', by.y = 'NAME')
ggplot(data = census2) + geom_polygon(aes(x = long, y = lat, fill = id, group = group), color = "white") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = id, group = group), color = "black") +
coord_fixed(1.3)
head(districts@data)
head(districts@data)
head(census@data)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group), color = "black") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = "darkblue", group = group), color = "black") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group), color = "black") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, fill = id, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group, alpha = 0.5), color = "black") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group), color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group, alpha = 0.5), color = "black") +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
coord_fixed(1.3)
lights = read.csv('Street_Lights.csv', stringsAsFactors = FALSE)
glimpse(lights)
plot(lights)
plot(lights$Lat, lights$Lon)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Service))
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Service)) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Ownership, size = 0.1)) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Ownership, size = 0.001)) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Ownership)) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = census2,
aes(x = long, y = lat, group = group),
color = "white") +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Ownership, alpha = 0.5)) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = districts2,
aes(x = long, y = lat, fill = Council_Me, group = group),
color = "black",
alpha = 0.5) +
geom_point(data = lights,
aes(x = Lon, y = Lat, color = Ownership, alpha = 0.5)) +
coord_fixed(1.3)
knitr::opts_chunk$set(echo = TRUE)
# this chunk will safely install and load some packages this code requires
if (!require("pacman")) install.packages("pacman")
pacman::p_load( skimr, DataExplorer, tidyverse, dplyr, lubridate, koRpus,
lexicon, magrittr, sentimentr, tidyr,
tidytext, tm, wordcloud2 )
theme_set(theme_light())
txEX <- read.csv('BDS-W13-W15-txEx-DataSet.csv', stringsAsFactors = FALSE)
dim(txEX)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(leaflet)
street_lights <- read.csv("Street_Lights.csv", stringsAsFactors = F)
street_lights[street_lights$Pole_Type %in% c(""," "),]$Pole_Type <- "Unknown"
street_lights[street_lights$Service %in% c(""," "),]$Service <- "Unknown"
street_lights$Inspect_Date2 <- as.Date(street_lights$Inspect_Date)
View(street_lights)
ui <- fluidPage(
selectInput(inputId = "variable", label = "Variable:",choices = c("Pole_Type","Service")),
plotOutput(outputId = "distPlot")
)
library(shiny)
ui <- fluidPage(
selectInput(inputId = "variable", label = "Variable:",choices = c("Pole_Type","Service")),
plotOutput(outputId = "distPlot")
)
server <- function(input, output) {
output$distPlot <-  renderPlot({
ggplot(data=street_lights, aes(x=street_lights[,input$variable])) +
geom_bar(stat="count") +
xlab(input$variable)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
selectInput(inputId = "variable", label = "Variable:",choices = c("Pole_Type","Service")),
dateRangeInput(inputId = "dates", label = "Date range", startview = "year",start="2000-01-01"),
plotOutput(outputId = "distPlot")
)
server <- function(input, output) {
output$distPlot <-  renderPlot({
ggplot(data=street_lights, aes(x=street_lights[,input$variable])) +
geom_bar(stat="count") +
xlab(input$variable)
})
}
shinyApp(ui = ui, server = server)
ui = navbarPage("Mayor Pete Dashboard",
tabPanel("Dan",
sidebarLayout(
sidebarPanel(
radioButtons("plotType", "Plot type",
c("Scatter"="p", "Line"="l")
)
),
mainPanel(
plotOutput("plot")
)
)
),
tabPanel("Gerard",
verbatimTextOutput("summary")
),
tabPanel("Mike",
DT::dataTableOutput("table")
),
tabPanel("Tony",
verbatimTextOutput("structure")
)
)
library(shiny)
library(ggplot2)
library(markdown)
server = function(input, output, session) {
output$plot <- renderPlot({
plot(cars, type=input$plotType)
})
output$summary <- renderPrint({
summary(cars)
})
output$table <- DT::renderDataTable({
DT::datatable(cars)
})
output$structure <- renderPrint({
str(cars)
})
}
ui = navbarPage("Mayor Pete Dashboard",
tabPanel("Dan",
sidebarLayout(
sidebarPanel(
radioButtons("plotType", "Plot type",
c("Scatter"="p", "Line"="l")
)
),
mainPanel(
plotOutput("plot")
)
)
),
tabPanel("Gerard",
verbatimTextOutput("summary")
),
tabPanel("Mike",
DT::dataTableOutput("table")
),
tabPanel("Tony",
verbatimTextOutput("structure")
)
)
shinyApp(ui = ui, server = server)
library(shiny)
library(ggplot2)
library(markdown)
server = function(input, output, session) {
output$plot <- renderPlot({
plot(cars, type=input$plotType)
})
output$summary <- renderPrint({
summary(cars)
})
output$table <- DT::renderDataTable({
DT::datatable(cars)
})
output$structure <- renderPrint({
str(cars)
})
}
ui = navbarPage("Mayor Pete Dashboard",
tabPanel("Dan",
sidebarLayout(
sidebarPanel(
radioButtons("plotType", "Plot type",
c("Scatter"="p", "Line"="l")
)
),
mainPanel(
plotOutput("plot")
)
)
),
tabPanel("Gerard",
verbatimTextOutput("summary")
),
tabPanel("Mike",
DT::dataTableOutput("table")
),
tabPanel("Tony",
verbatimTextOutput("structure")
)
)
shinyApp(ui = ui, server = server)
Rscript app.r
?Rscript
Rscript "app.r"
Rscript("app.r")
